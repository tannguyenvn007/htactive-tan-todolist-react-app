{"version":3,"sources":["contexts/ColorContext.js","components/Button.js","components/Content.js","views/Login.js","components/TodoInput.js","contexts/TodoContext.js","hocs/withTodo.js","components/TodoItem.js","components/TodoContent.js","views/Home.js","components/Icon.js","components/Header.js","components/ColorProvider.js","constants/config.js","components/TodoProvider.js","App.js","serviceWorker.js","index.js"],"names":["ColorContext","React","createContext","Button","props","text","onLogin","_useContext","useContext","color","button","react_default","a","createElement","onClick","type","className","style","backgroundColor","Content","_useState","useState","Object","slicedToArray","map","key","Login","components_Content","page","TodoInput","textInput","createRef","_useState2","setText","useEffect","current","focus","onSubmit","event","preventDefault","addTodo","placeholder","name","value","onChange","target","required","ref","TodoContext","withTodo","Component","context","assign","_React$useState","todo","_React$useState2","completeTodo","updateTodo","removeTodo","onCloseInput","isEditing","Fragment","updateTodoList","id","defaultValue","done","todos","filterStatus","active","components_TodoItem","isLoading","react_loader_spinner_default","height","width","components_TodoInput","components_TodoContent","Icon","href","src","alt","Header","handleClick","ColorProvider","ary","setColor","contexts_ColorContext","Provider","join","Math","floor","random","children","API_URL","TodoProvider","setTodo","_useState3","_useState4","filter","setFilter","_useState5","_useState6","setIsLoading","_ref","asyncToGenerator","regenerator_default","mark","_callee","task","wrap","_context","prev","next","axios","get","concat","API","sent","data","sort","compare","stop","apply","this","arguments","fetchTask","_ref2","_callee2","to","_context2","post","toConsumableArray","_x","_ref3","_callee3","_context3","window","confirm","delete","t","_x2","_ref4","_callee4","_context4","put","objectSpread","_x3","_x4","_ref5","_callee5","_context5","_x5","_x6","b","contexts_TodoContext","filterTodo","status","App","setPage","onChangePage","views_Home","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3df0e931.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ColorContext = React.createContext();\r\n\r\nexport default ColorContext;","import React, {useContext } from \"react\";\r\nimport ColorContext from \"../contexts/ColorContext\";\r\n\r\nexport default props => {\r\n  var { text, onLogin } = props;\r\n  const {color, button} = useContext(ColorContext);\r\n  return (\r\n    <button\r\n      onClick={() => onLogin(\"home\")}\r\n      type=\"button\"\r\n      className=\"btn-c\"\r\n      style={{ backgroundColor: color }}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst Content = props => {\r\n\r\n  const [button] = useState([\"GitHub\", \"Google\", \"Twitter\"]);\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <div className=\"c-row sign-in\">\r\n        <div className=\"c-col\">\r\n          <h1 className=\"sign-in-heading\">Sign in</h1>\r\n          <div className=\"sign-in-button\">\r\n            {button.map((button, key) => (\r\n              <Button key={key} text={button} onLogin={props.onLogin} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\n\r\nimport Content from \"../components/Content\";\r\n\r\nexport default (props) => {\r\n    return <Content onLogin={props.onLogin} page={props.page} />\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TodoInput = props => {\n  const textInput = React.createRef();\n  const [text, setText] = useState(\"\");\n  const onChange = event => {\n    setText(event.target.value);\n  };\n  const submit = event => {\n    event.preventDefault();\n    setText(\"\");\n    props.addTodo(text);\n  };\n  useEffect(() => {\n    textInput.current.focus();\n  });\n  return (\n    <form className=\"form-c\" onSubmit={submit}>\n      <input\n        className=\"input-c\"\n        type=\"text\"\n        placeholder=\"What needs to be done?\"\n        name=\"task\"\n        value={text}\n        onChange={onChange}\n        required\n        ref={textInput}\n      />\n    </form>\n  );\n};\n\nexport default TodoInput;\n\nTodoInput.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};\n","import React from 'react';\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nexport default TodoContext;","import React, { useContext } from \"react\";\r\nimport TodoContext from \"../contexts/TodoContext\";\r\n\r\nexport default Component => {\r\n  return props => {\r\n    const context = useContext(TodoContext);\r\n\r\n    return <Component {...context} {...props} />;\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withTodo from \"../hocs/withTodo\";\r\n\r\nconst TodoItem = props => {\r\n  const [text, setText] = React.useState(props.todo.text)\r\n  const handleChange = event => {\r\n    setText(event.target.value);\r\n  };\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    props.updateTodoList(text, props.todo.id);\r\n  };\r\n  const { todo, completeTodo, updateTodo, removeTodo, onCloseInput } = props;\r\n  return (\r\n    <div className=\"cell\">\r\n      {!todo.isEditing ? (\r\n        <>\r\n          <button\r\n            className=\"btn-c btn-icon\"\r\n            onClick={() => completeTodo(todo.id, todo.done)}\r\n          >\r\n            <i\r\n              className={\r\n                !todo.done ? \" fas fa-check  btn-active\" : \"fas fa-check \"\r\n              }\r\n            />\r\n          </button>\r\n          <p\r\n            className={\r\n              !todo.done\r\n                ? \" cell-item item-text text-active\"\r\n                : \"cell-item item-text\"\r\n            }\r\n          >\r\n            {todo.text}\r\n          </p>\r\n          <button\r\n            className=\"btn-c btn-icon\"\r\n            onClick={() => updateTodo(todo.id)}\r\n          >\r\n            <i className=\"fas fa-pen\" />\r\n          </button>\r\n          <button\r\n            className=\"btn-c btn-icon\"\r\n            onClick={() => removeTodo(todo.id)}\r\n          >\r\n            <i className=\"fas fa-trash-alt\" />\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              className=\"cell-item item-text input-item\"\r\n              type=\"text\"\r\n              placeholder=\"asdas\"\r\n              defaultValue={text}\r\n              onChange={handleChange}\r\n            />\r\n          </form>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-c btn-icon\"\r\n            onClick={() => onCloseInput(todo.id)}\r\n          >\r\n            <i className=\"fas fa-times\" />\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default withTodo(TodoItem);\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.shape({\r\n    text: PropTypes.string,\r\n    done: PropTypes.bool\r\n  }),\r\n  completeTodo: PropTypes.func,\r\n  updateTodo: PropTypes.func,\r\n  removeTodo: PropTypes.func,\r\n  onCloseInput: PropTypes.func,\r\n  updateTodoList: PropTypes.func\r\n};\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport PropTypes from 'prop-types';\r\nimport withTodo from \"../hocs/withTodo\";\r\n\r\n const TodoContent = (props) =>{\r\n  const {todos, filterStatus,active,updateTodoList} = props;\r\n  return (\r\n    <>\r\n      <ul className=\"tasks\">\r\n        <li className={active === \"all\" ? \"task-item active\" : \"task-item\"}><a type=\"button\" onClick={() => filterStatus(\"all\")}>View All</a></li>\r\n        <li className={active === \"active\" ? \"task-item active\" : \"task-item\"}><a type=\"button\" onClick={() => filterStatus(\"active\")}>Active</a></li>\r\n        <li className={active === \"complete\" ? \"task-item active\" : \"task-item\"}><a type=\"button\" onClick={() => filterStatus(\"complete\")}>Complete</a></li>\r\n      </ul>\r\n      <div className=\"task-list\">\r\n        {todos.map((todo) => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            todo={todo}\r\n            updateTodoList={updateTodoList}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default withTodo(TodoContent);\r\n\r\nTodoContent.propTypes = {\r\n  filterStatus: PropTypes.func,\r\n}","import React from \"react\";\r\nimport TodoInput from \"../components/TodoInput\";\r\nimport TodoContent from \"../components/TodoContent\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport withTodo from \"../hocs/withTodo\";\r\n\r\nconst Home = props => {\r\n  return (\r\n    <>\r\n      {props.isLoading ? (\r\n        <div className=\"loader\">\r\n          <Loader\r\n            type=\"Ball-Triangle\"\r\n            color=\"rgb(206, 244, 66)\"\r\n            height=\"100\"\r\n            width=\"100\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"c-row\">\r\n          <div className=\"c-col\">\r\n            <TodoInput addTodo={props.addTodo} />\r\n          </div>\r\n          <div className=\"c-col\">\r\n            <TodoContent />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withTodo(Home);\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <a href=\"/\">\r\n      <img src=\"./images/github.png\" height=\"23px\" alt=\"\" />\r\n    </a>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport Icon from \"./Icon\";\r\nimport ColorContext from \"../contexts/ColorContext\";\r\n\r\nexport default props => {\r\n  const { handleClick } = useContext(ColorContext);\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"c-row\">\r\n        <div className=\"c-col\">\r\n          <h1 className=\"header-title\">Todo React Redux</h1>\r\n          <div className=\"header-action\">\r\n            {props.page === \"home\" ? (\r\n              <>\r\n                <div className=\"sign-out-btn\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-c\"\r\n                    onClick={() => props.onLogin(\"login\")}\r\n                  >\r\n                    Sign out\r\n                  </button>\r\n                </div>\r\n                <Icon />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Icon />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"color-btn\"\r\n                  onClick={handleClick}\r\n                >\r\n                  <img src=\"./images/color1.png\" height=\"23px\" alt=\"\" />\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport ColorContext from \"../contexts/ColorContext\";\r\n\r\nexport default props => {\r\n  const [color, setColor] = useState([12, 3, 3]);\r\n  const formatColor = ary => {\r\n    return \"rgb(\" + ary.join(\", \") + \")\";\r\n  };\r\n  const chooseColor = () => [\r\n    Math.floor(Math.random() * 256),\r\n    Math.floor(Math.random() * 256),\r\n    Math.floor(Math.random() * 256)\r\n  ];\r\n\r\n  const handleClick = () => {\r\n    setColor(chooseColor());\r\n  };\r\n  return (\r\n    <ColorContext.Provider\r\n      value={{\r\n        color: formatColor(color),\r\n        handleClick: handleClick\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ColorContext.Provider>\r\n  );\r\n};\r\n","export const API_URL = \"https://5ce4ab3ac1ee360014725c86.mockapi.io/\";","import React, { useState, useEffect } from \"react\";\r\nimport TodoContext from \"../contexts/TodoContext\";\r\nimport axios from \"axios\";\r\nimport * as API from \"../constants/config\";\r\n\r\nexport default props => {\r\n  const [todos, setTodo] = useState([]);\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchTask = async () => {\r\n      setIsLoading(true);\r\n      const task = await axios.get(`${API.API_URL}tasks`);\r\n      setTodo(task.data.sort(compare));\r\n      setIsLoading(false);\r\n    };\r\n    fetchTask();\r\n  }, []); // truyển mảng rỗng để useEffect chạy 1 lần (Didmount), nếu không truyền nó sẽ chạy liên tục vì lúc đó nó sẽ hiểu là (Didupdate)\r\n  const addTodo = async text => {\r\n    const to = await axios.post(`${API.API_URL}tasks`, {\r\n      done: true,\r\n      text: text\r\n    });\r\n    setTodo([to.data, ...todos]);\r\n  };\r\n\r\n  const removeTodo = async id => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      await axios.delete(`${API.API_URL}tasks/${id}`);\r\n      const todo = todos.filter(t => t.id !== id);\r\n      setTodo(todo);\r\n    }\r\n  };\r\n\r\n  const updateTodo = id => {\r\n    const todo = todos.map(t => (t.id !== id ? t : { ...t, isEditing: true }));\r\n    setTodo(todo);\r\n  };\r\n  const updateTodoList = async (text, id) => {\r\n    await axios.put(`${API.API_URL}tasks/${id}`, {\r\n      text\r\n    });\r\n    const todo = todos.map(t =>\r\n      t.id !== id ? t : { ...t, text, isEditing: false }\r\n    );\r\n    setTodo(todo);\r\n  };\r\n\r\n  const completeTodo = async (id, done) => {\r\n    await axios.put(`${API.API_URL}tasks/${id}`, {\r\n      done: !done\r\n    });\r\n    const todo = todos.map(t =>\r\n      t.id !== id ? t : { ...t, isEditing: false, done: !t.done }\r\n    );\r\n    setTodo(todo);\r\n  };\r\n\r\n  const filterStatus = status => {\r\n    setFilter(status);\r\n  };\r\n\r\n  const filterTodo = () => {\r\n    switch (filter) {\r\n      case \"active\":\r\n        return todos.filter(t => t.done);\r\n      case \"complete\":\r\n        return todos.filter(t => !t.done);\r\n      default:\r\n        return todos;\r\n    }\r\n  };\r\n\r\n  const onCloseInput = id => {\r\n    const todo = todos.map(t => (t.id !== id ? t : { ...t, isEditing: false }));\r\n    setTodo(todo);\r\n  };\r\n  const compare = (a, b) => {\r\n    return b.id - a.id;\r\n  };\r\n  return (\r\n    <TodoContext.Provider\r\n      value={{\r\n        isLoading: isLoading,\r\n        addTodo: addTodo,\r\n        todos: filterTodo(),\r\n        filterStatus: filterStatus,\r\n        active: filter,\r\n        removeTodo: removeTodo,\r\n        updateTodo: updateTodo,\r\n        updateTodoList: updateTodoList,\r\n        onCloseInput: onCloseInput,\r\n        completeTodo: completeTodo\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TodoContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport Login from \"./views/Login\";\r\nimport Home from \"./views/Home\";\r\nimport Header from \"./components/Header\";\r\nimport ColorProvider from \"./components/ColorProvider\";\r\nimport TodoProvider from \"./components/TodoProvider\";\r\n\r\nconst App = () => {\r\n\r\n  const [page, setPage] = useState(\"\");\r\n  const onChangePage = page => setPage(page);\r\n\r\n  return (\r\n    <ColorProvider>\r\n      <div className=\"wrapper\">\r\n        <Header\r\n          page={page}\r\n          onLogin={onChangePage}\r\n        />\r\n        {page === \"home\" ? (\r\n          <TodoProvider>\r\n            <Home />\r\n          </TodoProvider>\r\n        ) : (\r\n          <Login onLogin={onChangePage} page={page} />\r\n        )}\r\n      </div>\r\n    </ColorProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}